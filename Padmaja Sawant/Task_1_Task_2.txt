Task 1 :

1.Git is a distributed version control system which tracks changes to source code over time. It is a command line tool that requires an interface to interact with the world. It creates a local repository to track changes locally rather than store them on a centralized server.
Github is a web based hosting service for Git repository to bring teams together. It is a graphical interface and a development platform created for millions of developers. It is open source which means code is stored in a centralized server and is accessible to everybody.2.Git is widely popular due to following reasons:
1.Easy Project Management
2.Increased safety of packages
3.Effective Team management
4.Improved code writing
5.Increased code safety
6.Easy code hosting 3.Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later. It helps to keep track of changes and keep ever team member working off the latest version.
Git is a distributed version control tool (VCS)  that supports distributed non-linear workflows by providing data assurance for developing quality software.4. Similar platforms like Githib:
1.Source Forge
2.Apache Allura
3.BitBucket
4.Launchpad
5.AWS Codecommit 5. Github is undoubtedly a valuable skill to have as a programmer, not only in the workplace, but also personally. It's the most popular source code hosting facility out there, and it's still growing. It let's you save your code online. Allows all developers of a project to see what changes the other one has made. It also allows you to discuss issues in your code with other developers. And that's why I am interested in learning Github.



Task 2:

1)How git workflows works?There are three main components of a Git workflow :
a)Repository : The repository, or repo, is the “container” that tracks the changes to your project files. It holds all the commits—a snapshot of all your files at a point in time—that have been made. You can access the commit history with the Git log.
b)Working tree : The working tree, or working directory, consists of files that you are currently working on. You can think of a working tree as a file system where you can view and modify files.
c)Index : The index, or staging area, is where commits are prepared. The index compares the files in the working tree to the files in the repo. When you make a change in the working tree, the index marks the file as modified before it is committed.2)What are the different stages of a git project as a commit, add? a) Untracked: the file exists, but is not part of git's version control
b) Staged: the file has been added to git's version control but changes have not been committed
c) Committed: the change has been committed3)Is it possible to do a git commit before git add,  if you made any changes. Explain why? No, because you have to explicitly tell Git which changes you want to include in a commit before running the "git commit" command. This means that a file won't be automatically included in the next commit just because it was changed. Instead, you need to use the "git add" command to mark the desired changes for inclusion.4) Why is git diff used ?The diff command calculates and displays the differences between two files, and is typically used to investigate the changes between two versions of the same file.
Compares the working directory with index, i.e. shows the changes that are not staged yet.5)Can we leave the commit message as blank?Yes,  we can leave commit message blank.  However proper commit messages will make it easy to understand why a change has been made at a particular time. With this, maintainers of a project will easily be able to make changes decades later because they understand the code.Link to github repository : https://github.com/Padmaja007/gitseries_projects.git